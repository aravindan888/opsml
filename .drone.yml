kind: pipeline
name: test-and-build
type: docker

trigger:
  event:
  - pull_request

steps:
  - name: py39
    image: python:3.9
    commands:
      #- python env.py
      - apt update
      - pip install poetry==1.1.11
      - poetry install
      - ls
      - make test.unit
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
      GOOGLE_ACCOUNT_JSON_BASE64:
        from_secret: GOOGLE_ACCOUNT_JSON_BASE64

  - name: quality-checks
    image: python:3.9
    commands:
      - pip install poetry==1.1.11
      - poetry install
      - make format
      - make lints.ci
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
      GOOGLE_ACCOUNT_JSON_BASE64:
        from_secret: GOOGLE_ACCOUNT_JSON_BASE64


  - name: code-analysis
    image: plugins/sonarqube-drone-plugin
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
      SONAR_HOST:
        from_secret: SONAR_HOST
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
    depends_on:
      - py39
      - quality-checks

---
name: publish-release
kind: pipeline
type: docker
depends_on:
  - test-and-build
trigger:
  event:
    - tag
  branch:
    - main

steps:
  - name: artifactory-poetry-publish
    image: harbor.shipttech.com/apps/python-images/shipt-python:3.9.12_poetry_1.1.13
    environment:
      POETRY_HTTP_BASIC_SHIPT_DEPLOY_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_DEPLOY_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    commands:
      # tag events validate poetry version is equal to the tag
      # increment patch version for releases based on drone tag
      # manually updating toml is annoying
      - export TAG=$(echo "$DRONE_TAG" | cut -c 2-)
      - poetry version "$TAG"
      - make publish